@model SubjectViewModel

@{
    ViewData["Title"] = "Edit";
}

<h4 class="category-heading mb-3">Edit Subject <span class="text-info">@Model.Uid</span></h4><hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Subject.SubjectId" />
            <div class="form-group">
                <label asp-for="Subject.Name" class="control-label"></label>
                <input asp-for="Subject.Name" class="form-control" />
                <span asp-validation-for="Subject.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Subject.Description" class="control-label"></label>
                <input asp-for="Subject.Description" class="form-control" />
                <span asp-validation-for="Subject.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Subject.RequiredReading" class="control-label"></label>
                <input asp-for="Subject.RequiredReading" class="form-control" />
                <span asp-validation-for="Subject.RequiredReading" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="LastPage" type="hidden" value="@Model.LastPage"/>
                <input type="submit" value="Save" class="btn btn-primary"/>
                <a class="btn btn-primary" href="previous.html" onClick="history.back();return false;">Back</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
