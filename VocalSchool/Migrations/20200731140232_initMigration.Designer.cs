// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VocalSchool.Data;
using VocalSchool.Models;

namespace VocalSchool.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20200731140232_initMigration")]
    partial class initMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("VocalSchool.Models.CourseDesign", b =>
                {
                    b.Property<int>("CourseDesignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SeminarId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseDesignId");

                    b.HasIndex("SeminarId");

                    b.ToTable("CourseDesigns");
                });

            modelBuilder.Entity("VocalSchool.Models.CourseSeminar", b =>
                {
                    b.Property<int>("CourseDesignId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeminarId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseDesignId", "SeminarId");

                    b.HasIndex("SeminarId");

                    b.ToTable("CourseSeminars");
                });

            modelBuilder.Entity("VocalSchool.Models.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DayId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("VocalSchool.Models.DaySubject", b =>
                {
                    b.Property<int>("DayId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DayId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("DaySubjects");
                });

            modelBuilder.Entity("VocalSchool.Models.Seminar", b =>
                {
                    b.Property<int>("SeminarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SeminarId");

                    b.ToTable("Seminars");
                });

            modelBuilder.Entity("VocalSchool.Models.SeminarDay", b =>
                {
                    b.Property<int>("SeminarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SeminarId", "DayId");

                    b.HasIndex("DayId");

                    b.ToTable("SeminarDays");
                });

            modelBuilder.Entity("VocalSchool.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequiredReading")
                        .HasColumnType("TEXT");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("VocalSchool.Models.CourseDesign", b =>
                {
                    b.HasOne("VocalSchool.Models.Seminar", null)
                        .WithMany("CourseDesigns")
                        .HasForeignKey("SeminarId");
                });

            modelBuilder.Entity("VocalSchool.Models.CourseSeminar", b =>
                {
                    b.HasOne("VocalSchool.Models.CourseDesign", "CourseDesign")
                        .WithMany("CourseSeminars")
                        .HasForeignKey("CourseDesignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VocalSchool.Models.Seminar", "Seminar")
                        .WithMany()
                        .HasForeignKey("SeminarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VocalSchool.Models.DaySubject", b =>
                {
                    b.HasOne("VocalSchool.Models.Day", "Day")
                        .WithMany("DaySubjects")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VocalSchool.Models.Subject", "Subject")
                        .WithMany("DaySubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VocalSchool.Models.SeminarDay", b =>
                {
                    b.HasOne("VocalSchool.Models.Day", "Day")
                        .WithMany("SeminarDays")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VocalSchool.Models.Seminar", "Seminar")
                        .WithMany("SeminarDays")
                        .HasForeignKey("SeminarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
